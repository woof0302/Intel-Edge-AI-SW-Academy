
standLightAp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000280  00000314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000280  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800102  00800102  00000316  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000316  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000348  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000388  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ee8  00000000  00000000  00000428  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a65  00000000  00000000  00001310  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000615  00000000  00000000  00001d75  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  0000238c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005c1  00000000  00000000  0000245c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ea  00000000  00000000  00002a1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002b07  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e8       	ldi	r30, 0x80	; 128
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e0       	ldi	r26, 0x02	; 2
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 30       	cpi	r26, 0x0F	; 15
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	d9 d0       	rcall	.+434    	; 0x276 <main>
  c4:	db c0       	rjmp	.+438    	; 0x27c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <StandLight_init>:
  c8:	d2 d0       	rcall	.+420    	; 0x26e <LED_init>
  ca:	20 e0       	ldi	r18, 0x00	; 0
  cc:	49 e3       	ldi	r20, 0x39	; 57
  ce:	50 e0       	ldi	r21, 0x00	; 0
  d0:	6a e3       	ldi	r22, 0x3A	; 58
  d2:	70 e0       	ldi	r23, 0x00	; 0
  d4:	83 e0       	ldi	r24, 0x03	; 3
  d6:	91 e0       	ldi	r25, 0x01	; 1
  d8:	89 d0       	rcall	.+274    	; 0x1ec <Button_init>
  da:	21 e0       	ldi	r18, 0x01	; 1
  dc:	49 e3       	ldi	r20, 0x39	; 57
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	6a e3       	ldi	r22, 0x3A	; 58
  e2:	70 e0       	ldi	r23, 0x00	; 0
  e4:	89 e0       	ldi	r24, 0x09	; 9
  e6:	91 e0       	ldi	r25, 0x01	; 1
  e8:	81 c0       	rjmp	.+258    	; 0x1ec <Button_init>
  ea:	08 95       	ret

000000ec <StandLight_execute>:
  ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  f0:	82 30       	cpi	r24, 0x02	; 2
  f2:	09 f4       	brne	.+2      	; 0xf6 <StandLight_execute+0xa>
  f4:	3a c0       	rjmp	.+116    	; 0x16a <StandLight_execute+0x7e>
  f6:	28 f4       	brcc	.+10     	; 0x102 <StandLight_execute+0x16>
  f8:	88 23       	and	r24, r24
  fa:	51 f0       	breq	.+20     	; 0x110 <StandLight_execute+0x24>
  fc:	81 30       	cpi	r24, 0x01	; 1
  fe:	f9 f0       	breq	.+62     	; 0x13e <StandLight_execute+0x52>
 100:	08 95       	ret
 102:	83 30       	cpi	r24, 0x03	; 3
 104:	09 f4       	brne	.+2      	; 0x108 <StandLight_execute+0x1c>
 106:	47 c0       	rjmp	.+142    	; 0x196 <StandLight_execute+0xaa>
 108:	84 30       	cpi	r24, 0x04	; 4
 10a:	09 f4       	brne	.+2      	; 0x10e <StandLight_execute+0x22>
 10c:	5a c0       	rjmp	.+180    	; 0x1c2 <StandLight_execute+0xd6>
 10e:	08 95       	ret
 110:	83 e0       	ldi	r24, 0x03	; 3
 112:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 116:	ad d0       	rcall	.+346    	; 0x272 <LED_writeData>
 118:	83 e0       	ldi	r24, 0x03	; 3
 11a:	91 e0       	ldi	r25, 0x01	; 1
 11c:	7c d0       	rcall	.+248    	; 0x216 <Button_GetState>
 11e:	82 30       	cpi	r24, 0x02	; 2
 120:	21 f4       	brne	.+8      	; 0x12a <StandLight_execute+0x3e>
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 128:	08 95       	ret
 12a:	89 e0       	ldi	r24, 0x09	; 9
 12c:	91 e0       	ldi	r25, 0x01	; 1
 12e:	73 d0       	rcall	.+230    	; 0x216 <Button_GetState>
 130:	82 30       	cpi	r24, 0x02	; 2
 132:	09 f0       	breq	.+2      	; 0x136 <StandLight_execute+0x4a>
 134:	5a c0       	rjmp	.+180    	; 0x1ea <StandLight_execute+0xfe>
 136:	84 e0       	ldi	r24, 0x04	; 4
 138:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 13c:	08 95       	ret
 13e:	8f e0       	ldi	r24, 0x0F	; 15
 140:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 144:	96 d0       	rcall	.+300    	; 0x272 <LED_writeData>
 146:	83 e0       	ldi	r24, 0x03	; 3
 148:	91 e0       	ldi	r25, 0x01	; 1
 14a:	65 d0       	rcall	.+202    	; 0x216 <Button_GetState>
 14c:	82 30       	cpi	r24, 0x02	; 2
 14e:	19 f4       	brne	.+6      	; 0x156 <StandLight_execute+0x6a>
 150:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 154:	08 95       	ret
 156:	89 e0       	ldi	r24, 0x09	; 9
 158:	91 e0       	ldi	r25, 0x01	; 1
 15a:	5d d0       	rcall	.+186    	; 0x216 <Button_GetState>
 15c:	82 30       	cpi	r24, 0x02	; 2
 15e:	09 f0       	breq	.+2      	; 0x162 <StandLight_execute+0x76>
 160:	44 c0       	rjmp	.+136    	; 0x1ea <StandLight_execute+0xfe>
 162:	84 e0       	ldi	r24, 0x04	; 4
 164:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 168:	08 95       	ret
 16a:	8f e3       	ldi	r24, 0x3F	; 63
 16c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 170:	80 d0       	rcall	.+256    	; 0x272 <LED_writeData>
 172:	83 e0       	ldi	r24, 0x03	; 3
 174:	91 e0       	ldi	r25, 0x01	; 1
 176:	4f d0       	rcall	.+158    	; 0x216 <Button_GetState>
 178:	82 30       	cpi	r24, 0x02	; 2
 17a:	21 f4       	brne	.+8      	; 0x184 <StandLight_execute+0x98>
 17c:	83 e0       	ldi	r24, 0x03	; 3
 17e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 182:	08 95       	ret
 184:	89 e0       	ldi	r24, 0x09	; 9
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	46 d0       	rcall	.+140    	; 0x216 <Button_GetState>
 18a:	82 30       	cpi	r24, 0x02	; 2
 18c:	71 f5       	brne	.+92     	; 0x1ea <StandLight_execute+0xfe>
 18e:	84 e0       	ldi	r24, 0x04	; 4
 190:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 194:	08 95       	ret
 196:	8f ef       	ldi	r24, 0xFF	; 255
 198:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 19c:	6a d0       	rcall	.+212    	; 0x272 <LED_writeData>
 19e:	83 e0       	ldi	r24, 0x03	; 3
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	39 d0       	rcall	.+114    	; 0x216 <Button_GetState>
 1a4:	82 30       	cpi	r24, 0x02	; 2
 1a6:	21 f4       	brne	.+8      	; 0x1b0 <StandLight_execute+0xc4>
 1a8:	84 e0       	ldi	r24, 0x04	; 4
 1aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ae:	08 95       	ret
 1b0:	89 e0       	ldi	r24, 0x09	; 9
 1b2:	91 e0       	ldi	r25, 0x01	; 1
 1b4:	30 d0       	rcall	.+96     	; 0x216 <Button_GetState>
 1b6:	82 30       	cpi	r24, 0x02	; 2
 1b8:	c1 f4       	brne	.+48     	; 0x1ea <StandLight_execute+0xfe>
 1ba:	84 e0       	ldi	r24, 0x04	; 4
 1bc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1c0:	08 95       	ret
 1c2:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	54 d0       	rcall	.+168    	; 0x272 <LED_writeData>
 1ca:	83 e0       	ldi	r24, 0x03	; 3
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	23 d0       	rcall	.+70     	; 0x216 <Button_GetState>
 1d0:	82 30       	cpi	r24, 0x02	; 2
 1d2:	19 f4       	brne	.+6      	; 0x1da <StandLight_execute+0xee>
 1d4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 1d8:	08 95       	ret
 1da:	89 e0       	ldi	r24, 0x09	; 9
 1dc:	91 e0       	ldi	r25, 0x01	; 1
 1de:	1b d0       	rcall	.+54     	; 0x216 <Button_GetState>
 1e0:	82 30       	cpi	r24, 0x02	; 2
 1e2:	19 f4       	brne	.+6      	; 0x1ea <StandLight_execute+0xfe>
 1e4:	84 e0       	ldi	r24, 0x04	; 4
 1e6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ea:	08 95       	ret

000001ec <Button_init>:
 1ec:	fc 01       	movw	r30, r24
 1ee:	71 83       	std	Z+1, r23	; 0x01
 1f0:	60 83       	st	Z, r22
 1f2:	53 83       	std	Z+3, r21	; 0x03
 1f4:	42 83       	std	Z+2, r20	; 0x02
 1f6:	24 83       	std	Z+4, r18	; 0x04
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	85 83       	std	Z+5, r24	; 0x05
 1fc:	fb 01       	movw	r30, r22
 1fe:	30 81       	ld	r19, Z
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <Button_init+0x1e>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	2a 95       	dec	r18
 20c:	e2 f7       	brpl	.-8      	; 0x206 <Button_init+0x1a>
 20e:	80 95       	com	r24
 210:	83 23       	and	r24, r19
 212:	80 83       	st	Z, r24
 214:	08 95       	ret

00000216 <Button_GetState>:
 216:	fc 01       	movw	r30, r24
 218:	a2 81       	ldd	r26, Z+2	; 0x02
 21a:	b3 81       	ldd	r27, Z+3	; 0x03
 21c:	8c 91       	ld	r24, X
 21e:	21 e0       	ldi	r18, 0x01	; 1
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	04 80       	ldd	r0, Z+4	; 0x04
 224:	02 c0       	rjmp	.+4      	; 0x22a <Button_GetState+0x14>
 226:	22 0f       	add	r18, r18
 228:	33 1f       	adc	r19, r19
 22a:	0a 94       	dec	r0
 22c:	e2 f7       	brpl	.-8      	; 0x226 <Button_GetState+0x10>
 22e:	28 23       	and	r18, r24
 230:	59 f4       	brne	.+22     	; 0x248 <Button_GetState+0x32>
 232:	85 81       	ldd	r24, Z+5	; 0x05
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	41 f4       	brne	.+16     	; 0x248 <Button_GetState+0x32>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 238:	af e9       	ldi	r26, 0x9F	; 159
 23a:	bf e0       	ldi	r27, 0x0F	; 15
 23c:	11 97       	sbiw	r26, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <Button_GetState+0x26>
 240:	00 c0       	rjmp	.+0      	; 0x242 <Button_GetState+0x2c>
 242:	00 00       	nop
 244:	15 82       	std	Z+5, r1	; 0x05
 246:	08 95       	ret
 248:	22 23       	and	r18, r18
 24a:	69 f0       	breq	.+26     	; 0x266 <Button_GetState+0x50>
 24c:	85 81       	ldd	r24, Z+5	; 0x05
 24e:	81 11       	cpse	r24, r1
 250:	0c c0       	rjmp	.+24     	; 0x26a <Button_GetState+0x54>
 252:	8f e9       	ldi	r24, 0x9F	; 159
 254:	9f e0       	ldi	r25, 0x0F	; 15
 256:	01 97       	sbiw	r24, 0x01	; 1
 258:	f1 f7       	brne	.-4      	; 0x256 <Button_GetState+0x40>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <Button_GetState+0x46>
 25c:	00 00       	nop
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	85 83       	std	Z+5, r24	; 0x05
 262:	82 e0       	ldi	r24, 0x02	; 2
 264:	08 95       	ret
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	08 95       	ret
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	08 95       	ret

0000026e <LED_init>:
 26e:	11 ba       	out	0x11, r1	; 17
 270:	08 95       	ret

00000272 <LED_writeData>:
 272:	82 bb       	out	0x12, r24	; 18
 274:	08 95       	ret

00000276 <main>:
#include "ap/StandLight.h"


int main(void)
{
	StandLight_init();
 276:	28 df       	rcall	.-432    	; 0xc8 <StandLight_init>
 
    while (1) 
    {
		StandLight_execute();
 278:	39 df       	rcall	.-398    	; 0xec <StandLight_execute>
 27a:	fe cf       	rjmp	.-4      	; 0x278 <main+0x2>

0000027c <_exit>:
 27c:	f8 94       	cli

0000027e <__stop_program>:
 27e:	ff cf       	rjmp	.-2      	; 0x27e <__stop_program>
